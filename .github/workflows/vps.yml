# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          port: ${{ secrets.PORT }}
          source: "host-scripts/*.sh"
          target: "~/"
      
      - name: install pre-reqs
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSHKEY }}
          port: ${{ secrets.PORT }}
          script: |
              ls -la
              sh ~/host-scripts/install-ruby.sh
              sh ~/host-scripts/install-webserver.sh

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1.84.0
          
      # Runs a single command using the runners shell
      - name: Bundle install
        run: |
          bundle config set --local path 'vendor/bundle'
          bundle install --jobs 8 --retry 3

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          bundle exec rake db:migrate RAILS_ENV=test
          #bundle exec rspec --format RspecJunitFormatter --out test-results/test-rspec.xml
          #rubocop --format json --out test-results/rubocop.json
          
      - name: copy files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSHKEY }}
          source: "**/*,!.git/**/*,!.bundle/**/*,!.scannerwork/**/*,!coverage/**/*,!test-results/**/*,!install-host/**/*,!test/**/*"
          target: "/var/www/sites/blob/production"
      
